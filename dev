#!/bin/bash

# Exit on any error
set -e

# Check for required argument
if [ "$#" -lt 1 ]; then
    echo "Usage: $0 <arg>"
    exit 1
fi

# Choose the command based on the argument
case $1 in
    dc)
        tmuxinator start -p ./.tmuxinator/tmuxinator-dc.yaml
        ;;
    dc!)
        tmux kill-session -t dc_dev
        ;;
    k8-init)
        minikube delete && minikube start && minikube addons enable metrics-server &&  minikube addons enable ingress
        ./deploy_k8.sh
        kubectl wait --namespace ingress-nginx  --for=condition=ready pod  --selector=app.kubernetes.io/component=controller  --timeout=120s
        kubectl apply -f ./resources/ingress.yaml
        kubectl apply -f ./resources/prom.yaml
        kubectl create configmap prometheus-config --from-file=prometheus.yml || true
        ;;
    k8-r)
        kubectl delete statefulset store -R || true
        kubectl delete pvc -l app=store  || true
        ./deploy_k8.sh
        ;;
    k8)
        tmuxinator start -p ./.tmuxinator/tmuxinator-k8.yaml
        ;;
    k8!)
        tmux kill-session -t k8_dev
        ;;
    k8-e2e)
        k6 run -e ADDRESS="192.168.49.2:30000" e2e/test.js
        ;;
    dc-e2e)
        k6 run e2e/test.js
        ;;
    test)
        bazel test --execution_log_json_file=events.json $(bazel query 'kind(go_test, //...)' --output=label) --test_filter=$2 --test_arg=-test.short --test_summary=detailed --test_output=summary
        ;;
    rtest)
        ## TODO implement --test_summary=none for ibazel
        ibazel test $(bazel query 'kind(go_test, //...)' --output=label) --test_filter=$2
        ;;
    deps)
        ./update_deps.sh
        ;;
    dc-pprof)
        go tool pprof -http=:6001 http://localhost:6060/debug/pprof/profile 
        # go tool pprof http://localhost:6060/debug/pprof/profile 
        ;;
    events)
        jq -r 'select(.walltime | rtrimstr("s") | tonumber > 1) |  "\(.walltime): \(.targetLabel)"' events.json
        ;;
    scale)
        if [ "$#" -ne 2 ]; then
            echo "Usage: $0 <number_of_replicas>"
            exit 1
        fi
        if ! [[ "$2" =~ ^[0-9]+$ ]]; then
            echo "Error: The argument must be a positive integer."
            exit 1
        fi
        # docker-compose up -d --scale store=$2
        kubectl scale statefulset store --replicas=$2

        ;;
    *)
        echo "Invalid argument."
        exit 1
        ;;
esac
