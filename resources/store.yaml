apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: store
spec:
  replicas: 5
  # minReadySeconds: 30
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: store
  serviceName: store-service
  template:
    metadata:
      labels:
        app: store
    spec:
      containers:
        - image: docker.io/andrew-delph/store:store_image
          # imagePullPolicy: "Always"
          imagePullPolicy: Never
          name: store
          resources: {}
          volumeMounts:
            - name: store-data-volume
              mountPath: /store
          # startupProbe:
          #   httpGet:
          #     path: /
          #     port: 8080
          #   periodSeconds: 4
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            # initialDelaySeconds: 5
            periodSeconds: 5
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: 8080
          #   initialDelaySeconds: 20
          #   periodSeconds: 5

      restartPolicy: Always
      serviceAccountName: ""
  volumeClaimTemplates:
    - metadata:
        name: store-data-volume
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: store
spec:
  selector:
    app: store
  clusterIP: None
  ports:
    - name: external-http
      port: 8080
      targetPort: 8080
    - name: internal-grpc
      port: 7070
      targetPort: 7070
    - name: memberlist
      port: 8081
      targetPort: 8081
---
apiVersion: v1
kind: Service
metadata:
  name: store-node
spec:
  selector:
    app: store
  type: NodePort
  ports:
    - name: external-http
      port: 8080
      targetPort: 8080
      nodePort: 30000
