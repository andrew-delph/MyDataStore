apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: store
spec:
  replicas: 5
  selector:
    matchLabels:
      app: store
  serviceName: store-service
  template:
    metadata:
      labels:
        app: store
    spec:
      containers:
        - image: docker.io/andrew-delph/store:store_image
          # imagePullPolicy: "Always"
          imagePullPolicy: Never
          name: store
          resources: {}
          # volumeMounts:
          #   - name: store-data-volume
          #     mountPath: /path/in/container
      restartPolicy: Always
      serviceAccountName: ""
  # volumeClaimTemplates:
  #   - metadata:
  #       name: store-data-volume
  #     spec:
  #       accessModes: ["ReadWriteOnce"]
  #       resources:
  #         requests:
  #           storage: 10Gi
---
# apiVersion: v1
# kind: Service
# metadata:
#   name: store-service
# spec:
#   selector:
#     app: store
#   ports:
#     - name: external-http
#       port: 8080
#       targetPort: 8080
#     - name: internal-grpc
#       port: 7070
#       targetPort: 7070
#     - name: memberlist
#       port: 8081
#       targetPort: 8081
#   clusterIP: None # This creates a headless service, which is typically used with StatefulSets.
# status:
#   loadBalancer: {}
apiVersion: v1
kind: Service
metadata:
  name: store
spec:
  selector:
    app: store
  type: NodePort
  ports:
    - name: external-http
      port: 8080
      targetPort: 8080
      nodePort: 30000
    - name: internal-grpc
      port: 7070
      targetPort: 7070
    - name: memberlist
      port: 8081
      targetPort: 8081
